version: "3.9"

volumes:
  prometheus_data:
  grafana_data:
  loki_data:


networks:
  monitoring:
    name: monitoring
    external: true
  traefik:
    name: traefik
    external: true

services:
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - monitoring
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host(`${SUB_PROMETHEUS}.${DOMAIN}`)
      - traefik.http.routers.prometheus.entrypoints=websecure
      - traefik.http.services.prometheus.loadbalancer.server.port=9090
      - traefik.http.routers.prometheus.middlewares=chain-secure@file
      - traefik.http.routers.prometheus.service=prometheus
      - logging=promtail
      - logging_jobname=prometheus
    restart: on-failure

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - monitoring
    restart: on-failure

  alertmanager:
    image: prom/alertmanager
    volumes:
      - "./alertmanager/:/etc/alertmanager/"
    networks:
      - monitoring
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: on-failure

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
    restart: on-failure

  loki:
    container_name: loki
    image: grafana/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    volumes:
      - loki_data:/loki
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml
    networks:
      - traefik
      - monitoring
    labels:
      - traefik.http.routers.loki.rule=Host(`${SUB_LOKI}.${DOMAIN}`)
      - traefik.http.routers.loki.entrypoints=websecure
      - traefik.http.services.loki.loadbalancer.server.port=3100
      - traefik.http.routers.loki.middlewares=chain-secure@file
      - traefik.http.routers.loki.service=loki

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    volumes:
      - ./promtail/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/auth.log:/mnt/logs/auth.log
      - ../portainer/logs/access.log:/mnt/logs/access.log
      - ../portainer/logs/pritunl.log:/mnt/logs/pritunl.log
      - ../portainer/logs/traefik.log:/mnt/logs/traefik.log
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_SECURITY_ADMIN_PASSWORD}
      GF_SERVER_DOMAIN: ${SUB_GRAFANA}.${DOMAIN}
      GF_SERVER_ROOT_URL: https://${SUB_GRAFANA}.${DOMAIN}
      GF_USERS_ALLOW_SIGN_UP: 'false'
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    networks:
      - monitoring
      - traefik
    user: "472"
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`${SUB_GRAFANA}.${DOMAIN}`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - traefik.http.routers.grafana.middlewares=chain-secure@file
      - traefik.http.routers.grafana.service=grafana
    restart: on-failure
